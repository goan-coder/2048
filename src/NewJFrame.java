/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
 
/**
 *
 * @author Abhinav
 */
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Scanner;

import javax.swing.*;
public class NewJFrame extends javax.swing.JFrame implements KeyListener {
 
	private Game g;
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
//        jPanel1.setLayout(new GridLayout(4,4));
    }
    public NewJFrame(int n,Game g){
        this.n=n;
        this.g=g;
        initComponents();
        
    }

    public void display(int board[][]){
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                arr[i*n+j].setText(Integer.toString(board[i][j]));
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	addKeyListener(this);
    	setFocusable(true);
        jPanel1 = new javax.swing.JPanel();
        jPanel1.setLayout(new java.awt.GridLayout());
        jPanel1.setLayout(new java.awt.GridLayout(n,n));
        arr=new JTextField[n*n];
        for(int i=0;i<n*n;i++) {
        	arr[i]=new JTextField();
        	arr[i].setText("0");
        	arr[i].setEditable(false);
        	jPanel1.add(arr[i]);
        }
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
 
        
 

 
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(77, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
 
        pack();
    }// </editor-fold>                        
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
    	Scanner scanner = new Scanner(System.in);
    	n = Integer.parseInt(scanner.nextLine());
    	scanner.close();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
 
    // Variables declaration - do not modify                     
    private javax.swing.JPanel jPanel1;
//    int[] intArray = new int[20];
    private JTextField[] arr;
    private static int n;
    /** Handle the key typed event from the text field. */
    public void keyTyped(KeyEvent e) {
//        System.out.println("KEY TYPED: "+e);
    }

    /** Handle the key-pressed event from the text field. */
    public void keyPressed(KeyEvent e) {
        if(KeyEvent.getKeyText(e.getKeyCode())=="Left") {
        	g.move(MoveDirection.LEFT);
        }
        else if(KeyEvent.getKeyText(e.getKeyCode())=="Right") {
        	g.move(MoveDirection.RIGHT);
        }
        else if(KeyEvent.getKeyText(e.getKeyCode())=="Down") {
        	g.move(MoveDirection.DOWN);
        }
        else if(KeyEvent.getKeyText(e.getKeyCode())=="Up") {
        	g.move(MoveDirection.UP);
        }
    }

    /** Handle the key-released event from the text field. */
    public void keyReleased(KeyEvent e) {
//        System.out.println("KEY RELEASED: "+e);
    }
 
    // End of variables declaration                   
}
